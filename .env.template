# 应用环境

NODE_ENV=development # 开发或生产

# 信令服务器

HOST='' # 默认为 http://localhost:端口
PORT=3000

# 信任代理

TRUST_PROXY=false # true 或 false

# 对应 IANA 时区数据库的时区标识符，例如 Europe/Rome，默认为 UTC

TZ=UTC

# 日志

LOGS_DEBUG=true # true 或 false
LOGS_COLORS=true # true 或 false

# CORS
# 原因：允许指定来源，例如 '["https://example.com", "https://子域名.example.com", "http://localhost:3000"]'，或所有来源 '*'（默认）。
# 方法：只允许 GET 和 POST 方法

CORS_ORIGIN='*'
CORS_METHODS='["GET", "POST"]'

# IP 白名单
# 实例访问仅限于允许列表中指定的 IP 地址。此功能默认禁用。

IP_WHITELIST_ENABLED=false # true 或 false
IP_WHITELIST_ALLOWED='["127.0.0.1", "::1"]'

# OIDC - OpenID Connect
# 1. 在 https://auth0.com 上注册账户。
# 2. 导航到 https://manage.auth0.com/ 创建一个新的应用程序以满足您的具体需求。
# 对于寻求开源解决方案的用户，请查看：https://github.com/panva/node-oidc-provider

OIDC_ENABLED=false # true 或 false
OIDC_ALLOW_ROOMS_CREATION_FOR_AUTH_USERS=true # 允许所有通过 OIDC 认证的用户创建自己的房间
OIDC_BASE_URL_DYNAMIC=false # true 或 false
OIDC_ISSUER_BASE_URL='https://服务器.example.com'
OIDC_BASE_URL='http://localhost:3000' # https://p2p.mirotalk.com
OIDC_CLIENT_ID='ClientID'
OIDC_CLIENT_SECRET='ClientSecret'
OIDC_AUTH_REQUIRED=false # 如果所有路由都需要认证，请设置为 true
OIDC_AUTH_LOGOUT=true # 当设置为 true 时，控制从您的应用程序和 Auth0 的自动登出
SESSION_SECRET='mirotalk-p2p-oidc-secret'

# 主机保护
# HOST_PROTECTED: 
#		- 当设置为 true 时，需要从 HOST_USERS 列表中提供有效的用户名和密码来初始化或加入房间。
#		- 当 OIDC_ENABLED 与主机保护一起使用时，通过认证的用户将被识别为有效的。
# HOST_USER_AUTH: 当设置为 true 时，还需要提供有效的用户名和密码来加入房间。
# HOST_USERS: 这是有效用户及其凭据的列表。

HOST_PROTECTED=false # true 或 false
HOST_USER_AUTH=false # true 或 false
HOST_USERS='[{"username": "admin", "password": "admin"},{"username": "guest", "password": "guest"}]'

# JWT 令牌配置

JWT_KEY=mirotalkp2p_jwt_secret
JWT_EXP=1h

# 主持人列表
# 在我们的虚拟房间中，第一个加入的参与者将担任主持人。
# 此外，我们还有选择添加更多主持人和共事主持人，每个都有其用户名标识。

PRESENTERS='["Miroslav Pejic", "miroslav.pejic.85@gmail.com"]'

# Ngrok
# 1. 前往 https://ngrok.com
# 2. 免费开始 
# 3. 复制 YourNgrokAuthToken: https://dashboard.ngrok.com/get-started/your-authtoken

NGROK_ENABLED=false # true 或 false
NGROK_AUTH_TOKEN=YourNgrokAuthToken

# Stun
# 关于：https://bloggeek.me/webrtcglossary/stun/
# 检查：https://webrtc.github.io/samples/src/content/peerconnection/trickle-ice/

STUN_SERVER_ENABLED=true # true 或 false
STUN_SERVER_URL=stun:stun.l.google.com:19302

# Turn 
# 关于：https://bloggeek.me/webrtcglossary/turn/
# 推荐：https://github.com/coturn/coturn
# 安装：https://github.com/miroslavpejic85/mirotalk/blob/master/docs/coturn.md
# 免费的：https://www.metered.ca/tools/openrelay/（请创建自己的帐户）
# 检查：https://webrtc.github.io/samples/src/content/peerconnection/trickle-ice/

TURN_SERVER_ENABLED=true # true 或 false
TURN_SERVER_URL=turn:a.relay.metered.ca:443
TURN_SERVER_USERNAME=e8dd65b92c62d3e36cafb807
TURN_SERVER_CREDENTIAL=uWdWNmkhvyqTEswO

# IP 查找
# 使用 GeoJS 获取更多关于通过 IP 的对等体信息
# 文档：https://www.geojs.io/docs/v1/endpoints/geo/

IP_LOOKUP_ENABLED=false # true 或 false

# API
# 响应将为您提供一个入口点 / 会议室 URL。
# curl -X POST "http://localhost:3000/api/v1/meeting" -H  "authorization: mirotalkp2p_default_secret" -H  "Content-Type: application/json"

API_KEY_SECRET=mirotalkp2p_default_secret
API_DISABLED='["token", "meetings"]'

# 调查 URL 
# 用于在关闭呼叫后重定向客户端（反馈，网站等）

SURVEY_ENABLED=true # true 或 false
SURVEY_URL=https://www.questionpro.com/t/AUs7VZq00L

# 离开房间后的重定向 URL
# 在离开房间时，用户选择不提供反馈或调查禁用将被重定向到指定的 URL。如果启用为 false，则使用默认的 '/newrcall' URL。

REDIRECT_ENABLED=false # true 或 false
REDIRECT_URL='https://p2p.mirotalk.com'

# Sentry（可选）
# 1. 前往 https://sentry.io/
# 2. 创建帐户
# 3. 导航到 Settings/Projects/YourProjectName/Client Keys (DSN)

SENTRY_ENABLED=false # true 或 false
SENTRY_LOG_LEVELS=error # 要捕获的 Sentry 日志级别（例如，错误、警告）
SENTRY_DSN=YourClientKeyDSN
SENTRY_TRACES_SAMPLE_RATE=0.5

# Slack 集成（可选）
# 1. 前往 https://api.slack.com/apps/
# 2. 创建您的应用程序
# 3. 在设置 - 基本信息 - 应用凭证中选择您的签名密钥
# 4. 创建一个 Slash Command 并将请求 URL 设置为：https://your.domain.name/slack

SLACK_ENABLED=false # true 或 false
SLACK_SIGNING_SECRET=YourSlackSigningSecret

# Mattermost 集成（可选）
# 1. 导航到主菜单 > 集成 > Slash Commands。
# 2. 点击添加 Slash Command 并配置以下设置：
#    - 标题：输入描述性标题（例如 `P2P Command`）。
#    - 命令触发词：设置触发词为 `p2p`。
#    - 回调 URL：输入您的 Express 服务器的 URL（例如 `https://yourserver.com/mattermost`）。
#    - 请求方法：选择 POST。
#    - 启用自动补全：勾选自动补全复选框。
#    - 自动补全描述：提供简短的描述（例如 `获取 MiroTalk P2P 会议室`）。
# 3. 保存 slash command 并在此处复制生成的令牌作为 MATTERMOST_TOKEN。

MATTERMOST_ENABLED=false # true 或 false
MATTERMOST_SERVER_URL=YourMattermostServerUrl
MATTERMOST_USERNAME=YourMattermostUsername
MATTERMOST_PASSWORD=YourMattermostPassword
MATTERMOST_TOKEN=YourMettarmostToken
MATTERMOST_ROOM_TOKEN_EXPIRE=15m

# ChatGPT/OpenAI
# 1. 前往 https://platform.openai.com/
# 2. 创建您的帐户
# 3. 生成 APIKey https://platform.openai.com/account/api-keys

CHATGPT_ENABLED=false # true 或 false
CHATGPT_BASE_PATH=https://api.openai.com/v1/
CHATGPT_APIKEY=YourOpenAiApiKey
CHATGPT_MODEL=gpt-3.5-turbo
CHATGPT_MAX_TOKENS=1000
CHATGPT_TEMPERATURE=0

# 配置电子邮件设置以发送通知或警报
# 参考 Gmail 配置文档：https://support.google.com/mail/answer/185833?hl=en

EMAIL_ALERT=false # true 或 false
EMAIL_HOST=smtp.gmail.com
EMAIL_PORT=587
EMAIL_USERNAME=your_username
EMAIL_PASSWORD=your_password
EMAIL_FROM=
EMAIL_SEND_TO=p2p.mirotalk@gmail.com

# 统计数据
# Umami: https://github.com/umami-software/umami
# 我们使用我们的自托管 Umami 来跟踪聚合使用的统计数据以改进我们的服务。

STATS_ENABLED=true # true 或 false
STATS_SCR=https://stats.mirotalk.com/script.js
STATS_ID=c7615aa7-ceec-464a-baba-54cb605d7261